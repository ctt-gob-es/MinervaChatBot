.drawflow,
.drawflow .parent-node {
    position: relative
}

.parent-drawflow {
    display: flex;
    overflow: hidden;
    touch-action: none;
    outline: 0
}

.drawflow {
    width: 100%;
    height: 100%;
    user-select: none;
    perspective: 0
}

.drawflow .drawflow-node {
    display: flex;
    align-items: center;
    position: absolute;
    background: #0ff;
    width: 160px;
    min-height: 40px;
    border-radius: 4px;
    border: 2px solid #000;
    color: #000;
    z-index: 2;
    padding: 0px;
}

.drawflow .drawflow-node .inputs,
.drawflow .drawflow-node .outputs {
    width: 0
}

.drawflow .drawflow-node .drawflow_content_node {
    width: 100%;
    display: block
}

.drawflow .drawflow-node .input,
.drawflow .drawflow-node .output {
    position: relative;
    width: 20px;
    height: 20px;
    background: #fff;
    border-radius: 50%;
    border: 2px solid #000;
    cursor: crosshair;
    z-index: 1;
    margin-bottom: 5px
}

.drawflow .drawflow-node .input {
    left: -27px;
    top: 2px;
    background: #ff0
}

.drawflow .drawflow-node .output {
    right: -3px;
    top: 2px
}

.drawflow svg {
    z-index: 0;
    position: absolute;
    overflow: visible !important
}

.drawflow .connection {
    position: absolute;
    pointer-events: none;
    aspect-ratio: 1/1
}

.drawflow .connection .main-path {
    fill: none;
    stroke-width: 5px;
    stroke: #4682b4;
    pointer-events: all
}

.drawflow .connection .main-path:hover {
    stroke: #1266ab;
    cursor: pointer
}

.drawflow .connection .main-path.selected {
    stroke: #43b993
}

.drawflow .connection .point {
    cursor: move;
    stroke: #000;
    stroke-width: 2;
    fill: #fff;
    pointer-events: all
}

.drawflow .connection .point.selected,
.drawflow .connection .point:hover {
    fill: #1266ab
}

.drawflow .main-path {
    fill: none;
    stroke-width: 5px;
    stroke: #4682b4
}

.drawflow-delete {
    position: absolute;
    display: block;
    width: 30px;
    height: 30px;
    background: #000;
    color: #fff;
    z-index: 4;
    border: 2px solid #fff;
    line-height: 30px;
    font-weight: 700;
    text-align: center;
    border-radius: 50%;
    font-family: monospace;
    cursor: pointer
}

.drawflow>.drawflow-delete {
    margin-left: -15px;
    margin-top: 15px
}

.parent-node .drawflow-delete {
    right: -15px;
    top: -15px
}

.v-application__wrap {
    min-height: auto !important;
}

:root {
    --dfBackgroundColor: rgba(255, 255, 255, 1);
    --dfBackgroundSize: 25px;
    --dfBackgroundImage: linear-gradient(to right, rgba(50, 121, 148, 0.15) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(50, 121, 148, 0.15) 1px, transparent 1px);

    --dfNodeType: flex;
    --dfNodeTypeFloat: none;
    --dfNodeBackgroundColor: rgba(255, 255, 255, 1);
    --dfNodeTextColor: #000000;
    --dfNodeBorderSize: 1px;
    --dfNodeBorderColor: rgba(0, 185, 255, 1);
    --dfNodeBorderRadius: 5px;
    --dfNodeMinHeight: 55px;
    --dfNodeMinWidth: 250px;
    --dfNodePaddingTop: 15px;
    --dfNodePaddingBottom: 15px;
    --dfNodeBoxShadowHL: 0px;
    --dfNodeBoxShadowVL: 2px;
    --dfNodeBoxShadowBR: 15px;
    --dfNodeBoxShadowS: 2px;
    --dfNodeBoxShadowColor: rgba(0, 0, 0, 0.41);

    --dfNodeHoverBackgroundColor: rgb(114, 195, 228);
    --dfNodeHoverTextColor: rgba(255, 255, 255, 1);
    --dfNodeHoverBorderSize: 2px;
    --dfNodeHoverBorderColor: rgba(0, 185, 255, 1);
    --dfNodeHoverBorderRadius: 5px;

    --dfNodeHoverBoxShadowHL: 0px;
    --dfNodeHoverBoxShadowVL: 2px;
    --dfNodeHoverBoxShadowBR: 15px;
    --dfNodeHoverBoxShadowS: 2px;
    --dfNodeHoverBoxShadowColor: rgba(50, 121, 148, 0.41);

    --dfNodeSelectedBackgroundColor: rgba(255, 255, 255, 1);
    --dfNodeSelectedTextColor: rgba(0, 0, 0, 1);
    --dfNodeSelectedBorderSize: 2px;
    --dfNodeSelectedBorderColor: rgba(0, 185, 255, 1);
    --dfNodeSelectedBorderRadius: 5px;

    --dfNodeSelectedBoxShadowHL: 0px;
    --dfNodeSelectedBoxShadowVL: 2px;
    --dfNodeSelectedBoxShadowBR: 15px;
    --dfNodeSelectedBoxShadowS: 2px;
    --dfNodeSelectedBoxShadowColor: #4ea9ff;

    --dfInputBackgroundColor: #ffffff;
    --dfInputBorderSize: 1px;
    --dfInputBorderColor: rgba(0, 185, 255, 1);
    --dfInputBorderRadius: 50px;
    --dfInputLeft: -27px;
    --dfInputHeight: 20px;
    --dfInputWidth: 20px;

    --dfInputHoverBackgroundColor: rgba(0, 185, 255, 1);
    --dfInputHoverBorderSize: 2px;
    --dfInputHoverBorderColor: rgba(255, 255, 255, 1);
    --dfInputHoverBorderRadius: 50px;

    --dfOutputBackgroundColor: #ffffff;
    --dfOutputBorderSize: 1px;
    --dfOutputBorderColor: rgba(0, 185, 255, 1);
    --dfOutputBorderRadius: 50px;
    --dfOutputRight: -3px;
    --dfOutputHeight: 20px;
    --dfOutputWidth: 20px;

    --dfOutputHoverBackgroundColor: rgba(0, 185, 255, 1);
    --dfOutputHoverBorderSize: 2px;
    --dfOutputHoverBorderColor: rgba(255, 255, 255, 1);
    --dfOutputHoverBorderRadius: 50px;

    --dfLineWidth: 5px;
    --dfLineColor: #4682b4;
    --dfLineHoverColor: rgba(0, 185, 255, 1);
    --dfLineSelectedColor: #43b993;

    --dfRerouteBorderWidth: 2px;
    --dfRerouteBorderColor: #000000;
    --dfRerouteBackgroundColor: #ffffff;

    --dfRerouteHoverBorderWidth: 2px;
    --dfRerouteHoverBorderColor: #000000;
    --dfRerouteHoverBackgroundColor: #ffffff;

    --dfDeleteDisplay: block;
    --dfDeleteColor: #ffffff;
    --dfDeleteBackgroundColor: rgba(0, 185, 255, 1);
    --dfDeleteBorderSize: 2px;
    --dfDeleteBorderColor: #ffffff;
    --dfDeleteBorderRadius: 50px;
    --dfDeleteTop: -15px;

    --dfDeleteHoverColor: rgba(0, 185, 255, 1);
    --dfDeleteHoverBackgroundColor: #ffffff;
    --dfDeleteHoverBorderSize: 2px;
    --dfDeleteHoverBorderColor: rgba(0, 185, 255, 1);
    --dfDeleteHoverBorderRadius: 50px;

    --border-color: #cacaca;
    --background-box-title: #f7f7f7;
}

html,
body {
    margin: 0px;
    padding: 0px;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    font-family: 'Roboto', sans-serif;
}

#drawflow-canvas {
    position: relative;
    width: 100%;
    height: calc(100vh - 200px);
    top: 10px;
    border: 1px solid #9e9e9e;
    background: var(--dfBackgroundColor);
    background-size: var(--dfBackgroundSize) var(--dfBackgroundSize);
    background-image: var(--dfBackgroundImage);
}

.them-edit-link {
    position: absolute;
    top: 10px;
    right: 100px;
    color: black;
    font-size: 40px;
}

.them-edit-link a {
    text-decoration: none;
}

.wrapper {
    width: 100%;
    height: calc(100vh - 67px);
    display: flex;
}

.col {
    overflow: auto;
    width: 300px;
    height: 100%;
    border-right: 1px solid var(--border-color);
}

.drag-drawflow {
    border-bottom: 1px solid var(--border-color);
    padding-left: 20px;
    cursor: move;
    user-select: none;
}

.menu {
    position: absolute;
    height: 40px;
    display: block;
    background: white;
    width: 100%;
}

.menu ul {
    padding: 0px;
    margin: 0px;
    line-height: 40px;
}

.menu ul li {
    display: inline-block;
    margin-left: 10px;
    border-right: 1px solid var(--border-color);
    padding-right: 10px;
    line-height: 40px;
    cursor: pointer;
}

.menu ul li.selected {
    font-weight: bold;
}



.swal-wide {
    width: 80% !important;
}

@media only screen and (max-width: 768px) {
    .col {
        width: 50px;
    }

    .col .drag-drawflow span {
        display: none;
    }

    #drawflow {
        width: calc(100%);
    }
}

/* Editing Drawflow */

.drawflow .drawflow-node {
    display: var(--dfNodeType);
    background: var(--dfNodeBackgroundColor);
    color: var(--dfNodeTextColor);
    border: var(--dfNodeBorderSize) solid var(--dfNodeBorderColor);
    border-radius: var(--dfNodeBorderRadius);
    min-height: var(--dfNodeMinHeight);
    width: auto;
    min-width: var(--dfNodeMinWidth);
    /* padding-top: var(--dfNodePaddingTop); */
    /* padding-bottom: var(--dfNodePaddingBottom); */
    -webkit-box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
    box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
}

.drawflow .drawflow-node:hover {
    background: var(--dfNodeHoverBackgroundColor);
    color: var(--dfNodeHoverTextColor);
    border: var(--dfNodeHoverBorderSize) solid var(--dfNodeHoverBorderColor);
    border-radius: var(--dfNodeHoverBorderRadius);
    -webkit-box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
    box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
}

.drawflow .drawflow-node.selected {
    background: var(--dfNodeSelectedBackgroundColor);
    color: var(--dfNodeSelectedTextColor);
    border: var(--dfNodeSelectedBorderSize) solid var(--dfNodeSelectedBorderColor);
    border-radius: var(--dfNodeSelectedBorderRadius);
    -webkit-box-shadow: var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
    box-shadow: var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
}

.drawflow .drawflow-node.selected .title-box {
    color: #22598c;
    border-bottom: 1px solid #4ea9ff;
}

.drawflow .drawflow-node .input {
    left: var(--dfInputLeft);
    background: var(--dfInputBackgroundColor);
    border: var(--dfInputBorderSize) solid var(--dfInputBorderColor);
    border-radius: var(--dfInputBorderRadius);
    height: var(--dfInputHeight);
    width: var(--dfInputWidth);
}

.drawflow .drawflow-node .input:hover {
    background: var(--dfInputHoverBackgroundColor);
    border: var(--dfInputHoverBorderSize) solid var(--dfInputHoverBorderColor);
    border-radius: var(--dfInputHoverBorderRadius);
}

.drawflow .drawflow-node .outputs {
    float: var(--dfNodeTypeFloat);
}

.drawflow .drawflow-node .output {
    right: var(--dfOutputRight);
    background: var(--dfOutputBackgroundColor);
    border: var(--dfOutputBorderSize) solid var(--dfOutputBorderColor);
    border-radius: var(--dfOutputBorderRadius);
    height: var(--dfOutputHeight);
    width: var(--dfOutputWidth);
}

.drawflow .drawflow-node .output:hover {
    background: var(--dfOutputHoverBackgroundColor);
    border: var(--dfOutputHoverBorderSize) solid var(--dfOutputHoverBorderColor);
    border-radius: var(--dfOutputHoverBorderRadius);
}

.drawflow .connection .main-path {
    stroke-width: var(--dfLineWidth);
    stroke: var(--dfLineColor);
}

.drawflow .connection .main-path:hover {
    stroke: var(--dfLineHoverColor);
}

.drawflow .connection .main-path.selected {
    stroke: var(--dfLineSelectedColor);
}

.drawflow-delete {
    display: var(--dfDeleteDisplay);
    color: var(--dfDeleteColor);
    background: var(--dfDeleteBackgroundColor);
    border: var(--dfDeleteBorderSize) solid var(--dfDeleteBorderColor);
    border-radius: var(--dfDeleteBorderRadius);
}

.parent-node .drawflow-delete {
    top: var(--dfDeleteTop);
}

.drawflow-delete:hover {
    color: var(--dfDeleteHoverColor);
    background: var(--dfDeleteHoverBackgroundColor);
    border: var(--dfDeleteHoverBorderSize) solid var(--dfDeleteHoverBorderColor);
    border-radius: var(--dfDeleteHoverBorderRadius);
}

.drawflow-node .title-box {
    text-align: start;
    height: 50px;
    line-height: 50px;
    font-size: 1.5rem;
    cursor: move;
    padding: 0px 15px 15px 15px;
    background: #f5f8fa;
    border-bottom: 1px solid #dbd7d7;

    /* De esta manera no aplica blanco en su hover */
    color: #000!important;
}

.drawflow-node .box {
    padding: 15px
}

.drawflow .title-box svg {
    position: initial;
}

/* .drawflow-node .box {
    padding: 5px;
    font-size: 14px;
    color: #555555;

  } */

.drawflow-node .box p {
    margin-top: 5px;
    margin-bottom: 5px;
}

.drawflow-node input,
.drawflow-node select,
.drawflow-node textarea {
    border-radius: 4px;
    border: 1px solid var(--border-color);
    /* height: 30px; */
    line-height: 22px;
    font-size: 14px;
    width: 100%;
    color: #555555;
}

.drawflow-node textarea {
    /* height: 200px; */
}

.drawflow .connection .point {
    stroke: var(--dfRerouteBorderColor);
    stroke-width: var(--dfRerouteBorderWidth);
    fill: var(--dfRerouteBackgroundColor);
}

.drawflow .connection .point.selected,
.drawflow .connection .point:hover {
    stroke: var(--dfRerouteHoverBorderColor);
    stroke-width: var(--dfRerouteHoverBorderWidth);
    fill: var(--dfRerouteHoverBackgroundColor);
}

/* Modal */
.modal {
    display: none;
    position: fixed;
    z-index: 7;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    overflow: auto;
    background-color: rgb(0, 0, 0);
    background-color: rgba(0, 0, 0, 0.7);
}

.modal-content {
    position: relative;
    background-color: #fefefe;
    margin: 15% auto;
    /* 15% from the top and centered */
    padding: 20px;
    border: 1px solid #888;
    width: 400px;
    /* Could be more or less, depending on screen size */
}

/* The Close Button */
.modal .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

@media only screen and (max-width: 768px) {
    .modal-content {
        width: 80%;
    }
}

.badge-list {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.badge-list button {
    font-size: 1rem;
    font-weight: bold;
    background-color: #007bff;
    color: #fff;
    border: none;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
    width: 115px;
}

.badge-list button:hover {
    background-color: #0056b3;
}

.errorNode{
    box-shadow: 0px 0px 3px 5px #f14e4e!important;
}

.errorOutput{
    background: #f14e4e!important;
}
